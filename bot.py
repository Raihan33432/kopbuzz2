from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters
from check import check_numbers
import os

user_data = {}
BOT_TOKEN = os.getenv("BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [[
        InlineKeyboardButton("‚úÖ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®", callback_data="check"),
        InlineKeyboardButton("‚ùå ‡¶ï‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏‡ßá‡¶≤", callback_data="cancel")
    ]]
    await update.message.reply_text(
        "üëã ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ! ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶¨‡¶æ‡¶ü‡¶®‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
        reply_markup=InlineKeyboardMarkup(buttons)
    )

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "check":
        user_data[query.from_user.id] = []
        await query.message.reply_text("üì• ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡¶ó‡ßÅ‡¶≤‡ßã ‡¶¶‡¶ø‡¶® (‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶∞‡ßá):")
    elif query.data == "cancel":
        await query.message.reply_text("‚ùå ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§")

async def handle_numbers(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    if user_id not in user_data:
        return
    text = update.message.text.strip()
    numbers = [n.strip() for n in text.split("\n") if n.strip()]
    grouped = [numbers[i:i+5] for i in range(0, len(numbers), 5)]
    all_found = []
    for idx, group in enumerate(grouped, start=1):
        result = await check_numbers(group)
        formatted = f"üìä Group {idx}:\n
"
        for num, status in result.items():
            mark = "‚úÖ Telegram Account" if status else "‚ùå Not Found"
            formatted += f"{num} ‚Äì {mark}\n"
            if status:
                all_found.append(num)
        await update.message.reply_text(formatted)
    if all_found:
        await update.message.reply_text("üìã Telegram ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞:
" + "\n".join(all_found))
    else:
        await update.message.reply_text("‚ùå ‡¶ï‡ßã‡¶®‡ßã ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§")
    del user_data[user_id]

if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_button))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_numbers))
    app.run_polling()
